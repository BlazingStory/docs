"use strict";(self.webpackChunkblazingstory_docs=self.webpackChunkblazingstory_docs||[]).push([[26],{3544:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"enhancing-documentation","title":"\u270d\ufe0f Enhancing Documentation","description":"By default, the \\"Docs\\" pages in Blazing Story do not contain detailed descriptions.","source":"@site/docs/enhancing-documentation.md","sourceDirName":".","slug":"/enhancing-documentation","permalink":"/docs/enhancing-documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/BlazingStory/docs/tree/main/docs/enhancing-documentation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"\ud83d\udcc2 Structure of \\"stories\\"","permalink":"/docs/structure-of-stories"},"next":{"title":"\ud83d\udcdd Custom Pages & Markdown","permalink":"/docs/custom-pages-and-markdown"}}');var i=t(4848),r=t(8453);const s={},a="\u270d\ufe0f Enhancing Documentation",c={},d=[{value:"Adding Descriptions to Parameters",id:"adding-descriptions-to-parameters",level:2},{value:"Adding Descriptions to Component",id:"adding-descriptions-to-component",level:2},{value:"Adding Descriptions to Individual Stories",id:"adding-descriptions-to-individual-stories",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\ufe0f-enhancing-documentation",children:"\u270d\ufe0f Enhancing Documentation"})}),"\n",(0,i.jsx)(n.p,{children:'By default, the "Docs" pages in Blazing Story do not contain detailed descriptions.'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/jsakamoto/BlazingStory/main/assets/readme-images/docs-page-with-no-description.png",alt:""})}),"\n",(0,i.jsx)(n.h2,{id:"adding-descriptions-to-parameters",children:"Adding Descriptions to Parameters"}),"\n",(0,i.jsxs)(n.p,{children:['To add more detailed descriptions of component parameters to the "Docs" pages, write a summary of the component parameters in your UI component\u2019s .razor file using the ',(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/dotnet/csharp/language-reference/xmldoc/",children:'"XML document comment"'})," format, as shown below."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'@code {\n    ...\n    // \ud83d\udc47 Add these triple slash comments.\n    //    See also: https://learn.microsoft.com/dotnet/csharp/language-reference/xmldoc/\n\n    /// <summary>\n    /// Set a text that is button caption.\n    /// </summary>\n    [Parameter, EditorRequired]\n    public string? Text { get; set; }\n\n    /// <summary>\n    /// Set a color of the button. <see cref="ButtonColor.Default"/> is default.\n    /// </summary>\n    [Parameter]\n    public ButtonColor Color { get; set; } = ButtonColor.Default;\n    ...\n'})}),"\n",(0,i.jsx)(n.p,{children:"And next, enable generating an XML documentation file in your UI component library's project file (.csproj)."}),"\n",(0,i.jsx)(n.p,{children:'If you are working on Visual Studio, you can do that by turning on the option `Documentation file - Generate a file containing API documentation" from the property GUI window of the project (You can find that option in the "Build" > "Output" category. You can also find it more easily by searching with the "Documentation file" keyword inside the project property GUI window).'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/jsakamoto/BlazingStory/main/assets/readme-images/configure-xml-doc-comment.png",alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["Or, you can also do that by adding the ",(0,i.jsx)(n.code,{children:"<GenerateDocumentationFile>"})," MSBuild property with ",(0,i.jsx)(n.code,{children:"true"})," in a project file (.csproj) of your UI component library, like below."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'\x3c!-- \ud83d\udcc4 This is a project file (.csproj) of your UI component library --\x3e\n<Project Sdk="Microsoft.NET.Sdk.Razor">\n  <PropertyGroup>\n    ...\n    \x3c!-- \ud83d\udc47 Add this entry. --\x3e\n    <GenerateDocumentationFile>True</GenerateDocumentationFile>\n    ...\n'})}),"\n",(0,i.jsx)(n.p,{children:'After doing that, the XML documentation comments you added to parameters will appear on the "Docs" pages.'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/jsakamoto/BlazingStory/main/assets/readme-images/docs-page-with-parameter-description.png",alt:""})}),"\n",(0,i.jsx)(n.h2,{id:"adding-descriptions-to-component",children:"Adding Descriptions to Component"}),"\n",(0,i.jsx)(n.p,{children:"To add a description for the component itself, rather than for each of its parameters, you have to create a partial class file for the .razor file."}),"\n",(0,i.jsx)(n.p,{children:'For example, if you have a "Button.razor" component, you should add a corresponding "Button.razor.cs" file to your project and include the component\'s summary in that .razor.cs file, as shown below.'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'// \ud83d\udcc4 This is a partial class file "Button.razor.cs" \n//     of the "Button.razor" Razor component file.\n\n// \ud83d\udc47 Add the triple slash comments to the component class.\n\n/// <summary>\n/// This is basic button component.\n/// </summary>\npublic partial class Button\n{\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:'After doing that, the XML documentation comments you added will appear on the "Docs" pages.'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/jsakamoto/BlazingStory/main/assets/readme-images/docs-page-with-component-description.png",alt:""})}),"\n",(0,i.jsx)(n.h2,{id:"adding-descriptions-to-individual-stories",children:"Adding Descriptions to Individual Stories"}),"\n",(0,i.jsx)(n.p,{children:"You can provide descriptions for individual stories in addition to component and parameter descriptions. This is useful for explaining a particular story's specific context or purpose."}),"\n",(0,i.jsxs)(n.p,{children:["To add a description to a story, use the ",(0,i.jsx)(n.code,{children:"<Description>"})," render fragment parameter within the ",(0,i.jsx)(n.code,{children:"<Story>"})," component in your ",(0,i.jsx)(n.code,{children:".stories.razor"})," file. The content of the ",(0,i.jsx)(n.code,{children:"<Description>"}),' render fragment will be rendered in the "Docs" page, below the story\'s name.']}),"\n",(0,i.jsx)(n.p,{children:"Here's an example of how to add a description to a story:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'    ...\n    <Story Name="Default">\n        \x3c!--\n        \ud83d\udc47 Add a description for this story inside \n        the <Description> render fragment, as shown below:\n        --\x3e\n        <Description>\n            <b>Description:</b>\n            <span>\n            This section describes the usual usage of\n            the <code>&lt;IconButton&gt;</code> component.\n            </span>\n        </Description>\n        ...\n'})}),"\n",(0,i.jsx)(n.p,{children:'This will display the provided HTML content as the description for the "Default" story on the "Docs" page, as shown below:'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/jsakamoto/BlazingStory/main/assets/readme-images/docs-page-with-story-description.png",alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["You can use any HTML markup within the ",(0,i.jsx)(n.code,{children:"<Description>"})," render fragment to format your story's description."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);